"""
这一代码用于获得 Homography matrix
"""



import cv2
import numpy as np

# 输入一组平面上的点和它们在图像中的对应点(每一行按照x方向) 即：短边是x轴
src_points = np.array([ [821, 160],  [1055, 186], [1305, 215], [1576, 249],
                        [703, 215],  [959, 247], [1236, 286], [1533, 324],
                        [587, 277],  [856, 316], [1157, 357], [1492, 403],
                        [408, 366],  [714, 405], [1044, 460], [1423, 516],
                        [194, 477],  [528, 528], [908, 592], [1328, 668],
                                    [276, 697],  [702, 784], [1211, 887],
                                                    [430, 1048]],
                      dtype=np.float32)  # 对应的图像中的点
dst_points = np.array([ [200, 200],   [400, 200],  [600, 200], [800, 200],
                        [200, 400],   [400, 400],  [600, 400], [800, 400],
                        [200, 600],   [400, 600],  [600, 600], [800, 600],
                        [200, 800],   [400, 800],  [600, 800], [800, 800],
                        [200, 1000],  [400, 1000],  [600, 1000], [800, 1000],
                                      [400, 1200],  [600, 1200], [800, 1200],
                                                    [600, 1400]],
                      dtype=np.float32)  # 真实空间中平面上的点
"""

src_points = np.array([ [330, 201],  [632, 202],  [876, 200],  [1118, 197],
                        [374, 286],  [960, 276],  [969, 269],  [1216, 266],
                        [420, 377],  [761, 365],  [1074, 357], [1350, 351],
                        [474, 503],  [866, 482],  [1205, 466], [1514, 453],
                        [562, 676],  [1005, 643], [1388, 614],  [1720, 587],
                        [665, 917],  [1184, 851], [1629, 804]],
                      dtype=np.float32)  # 对应的图像中的点
dst_points = np.array([ [800, 1800],   [600, 1800],  [400, 1800],   [200, 1800],
                        [800, 1600],   [600, 1600],  [400, 1600],   [200, 1600],
                        [800, 1400],   [600, 1400],  [400, 1400],   [200, 1400],
                        [800, 1200],   [600, 1200],  [400, 1200],   [200, 1200],
                        [800, 1000],   [600, 1000],  [400, 1000],   [200, 1000],
                        [800, 800],    [600, 800],   [400, 800]],
                      dtype=np.float32)  # 真实空间中平面上的点
"""


# 估计透视变换矩阵H
H, _ = cv2.findHomography(src_points, dst_points)

# 打印透视变换矩阵H
print("Homography Matrix (H):\n", H)
